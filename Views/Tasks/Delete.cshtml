@model TaskManager.Models.TaskModel
@{
    ViewData["Title"] = "Supprimer la Tâche";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, system-ui, sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        color: #2d3748;
    }

    .container {
        max-width: 600px;
        margin: 40px auto;
        padding: 24px;
    }

    .delete-card {
        background: white;
        border-radius: 20px;
        padding: 32px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        text-align: center;
    }

    .delete-icon {
        font-size: 48px;
        margin-bottom: 16px;
        color: #fa8c16;
        animation: warning 2s ease-in-out infinite;
    }

    @@keyframes warning {
        0%, 100%

    {
        transform: scale(1);
    }

    50% {
        transform: scale(1.1);
    }

    }

    .delete-title {
        font-size: 28px;
        font-weight: 700;
        color: #2d3748;
        margin-bottom: 8px;
    }

    .delete-subtitle {
        color: #718096;
        font-size: 16px;
        margin-bottom: 24px;
    }

    .task-details {
        background: #fff7e6;
        border-radius: 12px;
        padding: 20px;
        margin: 24px 0;
        text-align: left;
        border-left: 4px solid #fa8c16;
    }

        .task-details h4 {
            color: #2d3748;
            margin-bottom: 16px;
            font-size: 16px;
            font-weight: 600;
        }

    .detail-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 12px;
        padding-bottom: 8px;
        border-bottom: 1px solid #e2e8f0;
    }

        .detail-row:last-child {
            border-bottom: none;
            margin-bottom: 0;
        }

    .detail-label {
        font-weight: 600;
        color: #4a5568;
        font-size: 14px;
    }

    .detail-value {
        color: #2d3748;
        font-size: 14px;
    }

    .task-id {
        background: #e6f7ff;
        color: #1890ff;
        padding: 4px 12px;
        border-radius: 12px;
        font-size: 12px;
        font-weight: 600;
    }

    .priority-badge {
        padding: 4px 12px;
        border-radius: 12px;
        font-size: 12px;
        font-weight: 600;
        text-transform: uppercase;
    }

    .priority-high {
        background: #fed7d7;
        color: #c53030;
    }

    .priority-medium {
        background: #feebc8;
        color: #dd6b20;
    }

    .priority-low {
        background: #c6f6d5;
        color: #2f855a;
    }

    .status-badge {
        padding: 4px 12px;
        border-radius: 12px;
        font-size: 12px;
        font-weight: 600;
        text-transform: uppercase;
    }

    .status-todo {
        background: #e2e8f0;
        color: #4a5568;
    }

    .status-progress {
        background: #bee3f8;
        color: #2b6cb0;
    }

    .status-done {
        background: #c6f6d5;
        color: #2f855a;
    }

    .warning-box {
        background: #fff2e8;
        border: 1px solid #fbb6ce;
        border-radius: 12px;
        padding: 16px;
        margin: 20px 0;
        color: #c05621;
        font-weight: 500;
    }

        .warning-box strong {
            display: block;
            margin-bottom: 4px;
            font-size: 16px;
            color: #c05621;
        }

    .button-group {
        display: flex;
        gap: 12px;
        margin-top: 32px;
        justify-content: center;
    }

    .btn {
        padding: 12px 24px;
        border-radius: 12px;
        font-size: 16px;
        font-weight: 600;
        text-decoration: none;
        border: none;
        cursor: pointer;
        transition: all 0.2s;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }

    .btn-danger {
        background: #fa8c16;
        color: white;
    }

        .btn-danger:hover {
            background: #d46b08;
            transform: translateY(-1px);
        }

    .btn-secondary {
        background: #f7fafc;
        color: #4a5568;
        border: 1px solid #e2e8f0;
    }

        .btn-secondary:hover {
            background: #edf2f7;
            color: #4a5568;
        }

    @@media (max-width: 768px) {
        .container

    {
        margin: 20px auto;
        padding: 16px;
    }

    .delete-card {
        padding: 24px;
    }

    .button-group {
        flex-direction: column;
    }

    .detail-row {
        flex-direction: column;
        align-items: flex-start;
        gap: 4px;
    }

    }
</style>

<div class="container">
    <div class="delete-card">
        <div class="delete-icon">🗑️</div>
        <h1 class="delete-title">Supprimer la Tâche</h1>
        <p class="delete-subtitle">Êtes-vous sûr de vouloir supprimer cette tâche définitivement ?</p>

        <div class="task-details">
            <h4>📋 Détails de la tâche à supprimer :</h4>

            <div class="detail-row">
                <span class="detail-label">ID :</span>
                <span class="detail-value">
                    <span class="task-id">#@Model.Id</span>
                </span>
            </div>

            <div class="detail-row">
                <span class="detail-label">Titre :</span>
                <span class="detail-value"><strong>@Model.Title</strong></span>
            </div>

            <div class="detail-row">
                <span class="detail-label">Description :</span>
                <span class="detail-value">
                    @if (string.IsNullOrEmpty(Model.Description))
                    {
                        <em style="color: #718096;">Aucune description</em>
                    }
                    else if (Model.Description.Length > 100)
                    {
                        @(Model.Description.Substring(0, 100) + "...")
                    }
                    else
                    {
                        @Model.Description
                    }
                </span>
            </div>

            <div class="detail-row">
                <span class="detail-label">Date d'échéance :</span>
                <span class="detail-value">
                    @if (Model.DueDate < DateTime.Now)
                    {
                        <span style="color: #e53e3e; font-weight: 600;">
                            ⏰ @Model.DueDate.ToString("dd/MM/yyyy") (En retard)
                        </span>
                    }
                    else
                    {
                        <span>📅 @Model.DueDate.ToString("dd/MM/yyyy")</span>
                    }
                </span>
            </div>

            <div class="detail-row">
                <span class="detail-label">Priorité :</span>
                <span class="detail-value">
                    <span class="priority-badge priority-@Model.Priority.ToLower()">
                        @if (Model.Priority == "High")
                        {
                            <text>🔴 Haute</text>
                        }
                        else if (Model.Priority == "Medium")
                        {

                            <text>🟡 Moyenne</text>
                        }
                        else
                        {

                            <text>🟢 Basse</text>
                        }
                    </span>
                </span>
            </div>

            <div class="detail-row">
                <span class="detail-label">Statut :</span>
                <span class="detail-value">
                    <span class="status-badge status-@Model.Status.ToLower().Replace(" ", "")">
                        @if (Model.Status == "To Do")
                        {
                            <text>📝 À Faire</text>
                        }
                        else if (Model.Status == "In Progress")
                        {

                            <text>⚡ En Cours</text>
                        }
                        else
                        {

                            <text>✅ Terminée</text>
                        }
                    </span>
                </span>
            </div>
        </div>

        <div class="warning-box">
            <strong>⚠️ Attention !</strong>
            Cette action est irréversible. Une fois supprimée, la tâche ne pourra plus être récupérée.
        </div>

        <form asp-action="Delete" method="post" id="deleteForm">
            <input type="hidden" asp-for="Id" />

            <div class="button-group">
                <button type="submit" class="btn btn-danger" id="deleteBtn">
                    🗑️ Supprimer définitivement
                </button>
                <a href="@Url.Action("Index")" class="btn btn-secondary">
                    ← Annuler et retourner
                </a>
            </div>
        </form>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('deleteForm');
        const deleteBtn = document.getElementById('deleteBtn');

        // Confirmation avant suppression
        form.addEventListener('submit', function(e) {
            e.preventDefault();

            // Double confirmation pour éviter les suppressions accidentelles
            const firstConfirm = confirm(
                '⚠️ Êtes-vous vraiment sûr de vouloir supprimer cette tâche ?\n\n' +
                'Tâche: "@Model.Title"\n\n' +
                'Cette action est irréversible !'
            );

            if (firstConfirm) {
                const finalConfirm = confirm(
                    '🚨 DERNIÈRE CONFIRMATION !\n\n' +
                    'Confirmez-vous définitivement la suppression de cette tâche ?'
                );

                if (finalConfirm) {
                    // Animation de suppression
                    deleteBtn.innerHTML = '⏳ Suppression en cours...';
                    deleteBtn.disabled = true;
                    deleteBtn.style.background = '#d46b08';

                    // Soumission après une courte animation
                    setTimeout(() => {
                        form.submit();
                    }, 1000);
                }
            }
        });

        // Animation d'apparition de la carte
        const card = document.querySelector('.delete-card');
        card.style.opacity = '0';
        card.style.transform = 'translateY(20px)';

        setTimeout(() => {
            card.style.transition = 'all 0.5s ease';
            card.style.opacity = '1';
            card.style.transform = 'translateY(0)';
        }, 100);
    });
</script>