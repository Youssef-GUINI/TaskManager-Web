@model TaskManager.Models.TaskModel
@{
    ViewData["Title"] = "Modifier la Tâche";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, system-ui, sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        color: #2d3748;
    }

    .container {
        max-width: 600px;
        margin: 40px auto;
        padding: 24px;
    }

    .edit-card {
        background: white;
        border-radius: 20px;
        padding: 32px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    }

    .edit-header {
        text-align: center;
        margin-bottom: 32px;
    }

    .task-badge {
        background: #e6f7ff;
        color: #1890ff;
        padding: 6px 16px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 600;
        display: inline-block;
        margin-bottom: 12px;
    }

    .edit-header h1 {
        font-size: 28px;
        font-weight: 700;
        color: #2d3748;
        margin-bottom: 8px;
    }

    .edit-header p {
        color: #718096;
        font-size: 16px;
    }

    .info-section {
        background: #f7fafc;
        border-radius: 12px;
        padding: 16px;
        margin-bottom: 24px;
        border-left: 4px solid #1890ff;
    }

        .info-section h4 {
            color: #2d3748;
            margin-bottom: 8px;
            font-size: 14px;
            font-weight: 600;
        }

        .info-section p {
            color: #718096;
            font-size: 14px;
            margin: 0;
        }

    .form-group {
        margin-bottom: 24px;
    }

    .form-label {
        display: block;
        margin-bottom: 8px;
        font-weight: 600;
        color: #4a5568;
        font-size: 14px;
    }

    .form-control {
        width: 100%;
        padding: 12px 16px;
        border: 1px solid #e2e8f0;
        border-radius: 12px;
        font-size: 16px;
        transition: border-color 0.2s;
        background: white;
    }

        .form-control:focus {
            outline: none;
            border-color: #1890ff;
            box-shadow: 0 0 0 3px rgba(24, 144, 255, 0.1);
        }

    .form-textarea {
        min-height: 100px;
        resize: vertical;
        font-family: inherit;
    }

    .form-select {
        width: 100%;
        padding: 12px 16px;
        border: 1px solid #e2e8f0;
        border-radius: 12px;
        font-size: 16px;
        background: white;
        cursor: pointer;
    }

        .form-select:focus {
            outline: none;
            border-color: #1890ff;
            box-shadow: 0 0 0 3px rgba(24, 144, 255, 0.1);
        }

    .button-group {
        display: flex;
        gap: 12px;
        margin-top: 32px;
        justify-content: center;
    }

    .btn {
        padding: 12px 24px;
        border-radius: 12px;
        font-size: 16px;
        font-weight: 600;
        text-decoration: none;
        border: none;
        cursor: pointer;
        transition: all 0.2s;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }

    .btn-primary {
        background: #1890ff;
        color: white;
    }

        .btn-primary:hover {
            background: #1676d4;
            transform: translateY(-1px);
        }

    .btn-secondary {
        background: #f7fafc;
        color: #4a5568;
        border: 1px solid #e2e8f0;
    }

        .btn-secondary:hover {
            background: #edf2f7;
            color: #4a5568;
        }

    .validation-error {
        color: #e53e3e;
        font-size: 14px;
        margin-top: 4px;
    }

    .required {
        color: #e53e3e;
    }

    .current-values {
        background: #fff7e6;
        border-radius: 8px;
        padding: 12px;
        margin-bottom: 16px;
        border-left: 3px solid #fa8c16;
    }

        .current-values h5 {
            color: #2d3748;
            font-size: 12px;
            font-weight: 600;
            margin-bottom: 8px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

    .current-value {
        font-size: 14px;
        color: #4a5568;
        font-weight: 500;
    }

    .priority-indicator {
        display: inline-block;
        padding: 4px 8px;
        border-radius: 12px;
        font-size: 11px;
        font-weight: 600;
        margin-left: 8px;
    }

    .priority-high {
        background: #fed7d7;
        color: #c53030;
    }

    .priority-medium {
        background: #feebc8;
        color: #dd6b20;
    }

    .priority-low {
        background: #c6f6d5;
        color: #2f855a;
    }

    .status-indicator {
        display: inline-block;
        padding: 4px 8px;
        border-radius: 12px;
        font-size: 11px;
        font-weight: 600;
        margin-left: 8px;
    }

    .status-todo {
        background: #e2e8f0;
        color: #4a5568;
    }

    .status-progress {
        background: #bee3f8;
        color: #2b6cb0;
    }

    .status-done {
        background: #c6f6d5;
        color: #2f855a;
    }

    @@media (max-width: 768px) {
        .container

    {
        margin: 20px auto;
        padding: 16px;
    }

    .edit-card {
        padding: 24px;
    }

    .button-group {
        flex-direction: column;
    }

    }
</style>

<div class="container">
    <div class="edit-card">
        <div class="edit-header">
            <div class="task-badge">Tâche #@Model.Id</div>
            <h1>✏️ Modifier la Tâche</h1>
            <p>Mettez à jour les informations de votre tâche</p>
        </div>

        @if (Model.CreatedDate != default(DateTime))
        {
            <div class="info-section">
                <h4>📅 Informations de création</h4>
                <p>Créée le @Model.CreatedDate.ToString("dddd, dd MMMM yyyy 'à' HH:mm", new System.Globalization.CultureInfo("fr-FR"))</p>
            </div>
        }

         @* <form asp-action="Edit" method="post">
            <input type="hidden" asp-for="Id" />
            @if (Model.CreatedDate != default(DateTime))
            {
                <input type="hidden" asp-for="CreatedDate" />
            }

            <div class="form-group">
                <label asp-for="Title" class="form-label">
                    Titre <span class="required">*</span>
                </label>
                <div class="current-values">
                    <h5>Valeur actuelle :</h5>
                    <span class="current-value">@Model.Title</span>
                </div>
                <input asp-for="Title" class="form-control" placeholder="Ex: Développer la page d'accueil" required />
                <span asp-validation-for="Title" class="validation-error"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="form-label">Description</label>
                @if (!string.IsNullOrEmpty(Model.Description))
                {
                    <div class="current-values">
                        <h5>Valeur actuelle :</h5>
                        <span class="current-value">@Model.Description</span>
                    </div>
                }
                <textarea asp-for="Description" class="form-control form-textarea"
                          placeholder="Décrivez les détails de la tâche..."></textarea>
                <span asp-validation-for="Description" class="validation-error"></span>
            </div>

            <div class="form-group">
                <label asp-for="DueDate" class="form-label">
                    Date d'échéance <span class="required">*</span>
                </label>
                <div class="current-values">
                    <h5>Valeur actuelle :</h5>
                    <span class="current-value">
                        @Model.DueDate.ToString("dddd, dd MMMM yyyy", new System.Globalization.CultureInfo("fr-FR"))
                        @if (Model.DueDate < DateTime.Now)
                        {
                            <span style="color: #e53e3e; font-weight: 600;">(En retard)</span>
                        }
                    </span>
                </div>
                <input asp-for="DueDate" class="form-control" type="date" required />
                <span asp-validation-for="DueDate" class="validation-error"></span>
            </div>

            <div class="form-group">
                <label asp-for="Priority" class="form-label">Priorité</label>
                <div class="current-values">
                    <h5>Valeur actuelle :</h5>
                    <span class="current-value">
                        @Model.Priority
                        <span class="priority-indicator priority-@Model.Priority.ToLower()">
                            @if (Model.Priority == "High")
                            {
                                <text>🔴 Haute</text>
                            }
                            else if (Model.Priority == "Medium")
                            {

                                <text>🟡 Moyenne</text>
                            }
                            else
                            {

                                <text>🟢 Basse</text>
                            }
                        </span>
                    </span>
                </div>
                <select asp-for="Priority" class="form-select">
                    <option value="Low">🟢 Basse</option>
                    <option value="Medium">🟡 Moyenne</option>
                    <option value="High">🔴 Haute</option>
                </select>
            </div>

            <div class="form-group">
                <label asp-for="Status" class="form-label">Statut</label>
                <div class="current-values">
                    <h5>Valeur actuelle :</h5>
                    <span class="current-value">
                        @Model.Status.Replace("To Do", "À Faire").Replace("In Progress", "En Cours").Replace("Done", "Terminée")
                        <span class="status-indicator status-@Model.Status.ToLower().Replace(" ", "")">
                            @if (Model.Status == "To Do")
                            {
                                <text>📝 À Faire</text>
                            }
                            else if (Model.Status == "In Progress")
                            {

                                <text>⚡ En Cours</text>
                            }
                            else
                            {

                                <text>✅ Terminée</text>
                            }
                        </span>
                    </span>
                </div>
                <select asp-for="Status" class="form-select">
                    <option value="To Do">📝 À Faire</option>
                    <option value="In Progress">⚡ En Cours</option>
                    <option value="Done">✅ Terminé</option>
                </select>
            </div>

            <div class="button-group">
                <button type="submit" class="btn btn-primary">
                    💾 Mettre à jour
                </button>
                <a href="@Url.Action("Index")" class="btn btn-secondary">
                    ← Retour à la liste
                </a>
            </div>
        </form>  *@
        <form asp-action="Edit" method="post">
    <input type="hidden" id="Id" name="Id" value="@Model.Id" />
    @if (Model.CreatedDate != default(DateTime))
    {
        <input type="hidden" id="CreatedDate" name="CreatedDate" value="@Model.CreatedDate.ToString("yyyy-MM-ddTHH:mm:ss")" />
    }

    <div class="form-group">
        <label class="form-label">
            Titre <span class="required">*</span>
        </label>
        <div class="current-values">
            <h5>Valeur actuelle :</h5>
            <span class="current-value">@Model.Title</span>
        </div>
        <input id="Title" name="Title" class="form-control" placeholder="Ex: Développer la page d'accueil" required value="@Model.Title" />
        <span class="validation-error"></span>
    </div>

    <div class="form-group">
        <label class="form-label">Description</label>
        @if (!string.IsNullOrEmpty(Model.Description))
        {
            <div class="current-values">
                <h5>Valeur actuelle :</h5>
                <span class="current-value">@Model.Description</span>
            </div>
        }
        <textarea id="Description" name="Description" class="form-control form-textarea" placeholder="Décrivez les détails de la tâche...">@Model.Description</textarea>
        <span class="validation-error"></span>
    </div>

    <div class="form-group">
        <label class="form-label">
            Date d'échéance <span class="required">*</span>
        </label>
        <div class="current-values">
            <h5>Valeur actuelle :</h5>
            <span class="current-value">
                @Model.DueDate.ToString("dddd, dd MMMM yyyy", new System.Globalization.CultureInfo("fr-FR"))
                @if (Model.DueDate < DateTime.Now)
                {
                    <span style="color: #e53e3e; font-weight: 600;">(En retard)</span>
                }
            </span>
        </div>
        <input id="DueDate" name="DueDate" class="form-control" type="date" required value="@Model.DueDate.ToString("yyyy-MM-dd")" />
        <span class="validation-error"></span>
    </div>

    <div class="form-group">
        <label class="form-label">Priorité</label>
        <div class="current-values">
            <h5>Valeur actuelle :</h5>
            <span class="current-value">
                @Model.Priority
                <span class="priority-indicator priority-@Model.Priority.ToLower()">
                    @if (Model.Priority == "High")
                    {
                        <text>🔴 Haute</text>
                    }
                    else if (Model.Priority == "Medium")
                    {
                        <text>🟡 Moyenne</text>
                    }
                    else
                    {
                        <text>🟢 Basse</text>
                    }
                </span>
            </span>
        </div>
        <select id="Priority" name="Priority" class="form-select">
            <option value="Low" @(Model.Priority == "Low" ? "selected" : "")>🟢 Basse</option>
            <option value="Medium" @(Model.Priority == "Medium" ? "selected" : "")>🟡 Moyenne</option>
            <option value="High" @(Model.Priority == "High" ? "selected" : "")>🔴 Haute</option>
        </select>
    </div>

    <div class="form-group">
        <label class="form-label">Statut</label>
        <div class="current-values">
            <h5>Valeur actuelle :</h5>
            <span class="current-value">
                @Model.Status.Replace("To Do", "À Faire").Replace("In Progress", "En Cours").Replace("Done", "Terminée")
                <span class="status-indicator status-@Model.Status.ToLower().Replace(" ", "")">
                    @if (Model.Status == "To Do")
                    {
                        <text>📝 À Faire</text>
                    }
                    else if (Model.Status == "In Progress")
                    {
                        <text>⚡ En Cours</text>
                    }
                    else
                    {
                        <text>✅ Terminée</text>
                    }
                </span>
            </span>
        </div>
        <select id="Status" name="Status" class="form-select">
            <option value="To Do" @(Model.Status == "To Do" ? "selected" : "")>📝 À Faire</option>
            <option value="In Progress" @(Model.Status == "In Progress" ? "selected" : "")>⚡ En Cours</option>
            <option value="Done" @(Model.Status == "Done" ? "selected" : "")>✅ Terminée</option>
        </select>
    </div>

    <div class="button-group">
        <button type="submit" class="btn btn-primary">
            💾 Mettre à jour
        </button>
        <a href="@Url.Action("Index")" class="btn btn-secondary">
            ← Retour à la liste
        </a>
    </div>
</form>

    </div>
</div>

@* <script>
    document.addEventListener('DOMContentLoaded', function() {
        // Auto-focus sur le premier champ
        const titleInput = document.querySelector('input[name="Title"]');
        if (titleInput) titleInput.focus();

        // Validation côté client
        const form = document.querySelector('form');
        form.addEventListener('submit', function(e) {
            const title = document.querySelector('input[name="Title"]').value.trim();
            const dueDate = document.querySelector('input[name="DueDate"]').value;

            if (!title) {
                e.preventDefault();
                alert('⚠️ Le titre est requis');
                titleInput.focus();
                return;
            }

            if (!dueDate) {
                e.preventDefault();
                alert('⚠️ La date d\'échéance est requise');
                document.querySelector('input[name="DueDate"]').focus();
                return;
            }

            // Animation de soumission
            const submitBtn = document.querySelector('button[type="submit"]');
            submitBtn.innerHTML = '⏳ Mise à jour...';
            submitBtn.disabled = true;
        });

        // Animation d'apparition
        const card = document.querySelector('.edit-card');
        card.style.opacity = '0';
        card.style.transform = 'translateY(20px)';

        setTimeout(() => {
            card.style.transition = 'all 0.5s ease';
            card.style.opacity = '1';
            card.style.transform = 'translateY(0)';
        }, 100);

        // Highlight des changements
        const inputs = document.querySelectorAll('.form-control, .form-select');
        inputs.forEach(input => {
            const originalValue = input.value;

            input.addEventListener('input', function() {
                if (this.value !== originalValue) {
                    this.style.borderColor = '#fa8c16';
                    this.style.boxShadow = '0 0 0 3px rgba(250, 140, 22, 0.1)';
                } else {
                    this.style.borderColor = '#e2e8f0';
                    this.style.boxShadow = 'none';
                }
            });
        });
    });
</script> *@