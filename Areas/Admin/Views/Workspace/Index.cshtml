@model TaskManager.Models.WorkspaceVM

@{
    ViewData["Title"] = "Workspace";
}
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    .dashboard-container {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        padding: 20px;
    }

    .dashboard-header {
        background: rgba(255, 255, 255, 0.95);
        border-radius: 20px;
        padding: 25px;
        margin-bottom: 30px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .welcome-section {
        display: flex;
        align-items: center;
        gap: 20px;
    }

    .welcome-illustration {
        width: 80px;
        height: 80px;
        background: linear-gradient(45deg, #ff6b6b, #feca57);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 30px;
        color: white;
        animation: float 3s ease-in-out infinite;
    }

    @@keyframes float {
        0%

    {
        transform: translateY(0px);
    }

    50% {
        transform: translateY(-10px);
    }

    100% {
        transform: translateY(0px);
    }

    }

    .welcome-text h2 {
        color: #2c3e50;
        font-weight: 700;
        margin-bottom: 5px;
    }

    .welcome-text p {
        color: #7f8c8d;
        margin: 0;
        font-size: 14px;
    }

    .progress-info {
        background: rgba(52, 152, 219, 0.1);
        padding: 15px;
        border-radius: 10px;
        border-left: 4px solid #3498db;
    }

        .progress-info h4 {
            color: #2980b9;
            margin: 0;
            font-weight: 600;
        }

        .progress-info p {
            color: #34495e;
            margin: 5px 0 0 0;
            font-size: 14px;
        }

    .profile-section {
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .profile-img {
        width: 45px;
        height: 45px;
        border-radius: 50%;
        border: 3px solid #3498db;
        object-fit: cover;
    }

    .profile-name {
        font-weight: 600;
        color: #2c3e50;
    }

    .card {
        background: rgba(255, 255, 255, 0.95);
        border: none;
        border-radius: 20px;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        backdrop-filter: blur(10px);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.15);
        }

    .card-header {
        background: none;
        border: none;
        padding: 20px 20px 10px 20px;
    }

        .card-header h5 {
            color: #2c3e50;
            font-weight: 600;
            margin: 0;
        }

    .card-body {
        padding: 15px 20px 20px 20px;
    }

    .priority-badge {
        display: inline-flex;
        align-items: center;
        gap: 10px;
        padding: 8px 15px;
        border-radius: 25px;
        font-weight: 600;
        margin-bottom: 10px;
        width: 100%;
        justify-content: space-between;
    }

    .priority-high {
        background: rgba(231, 76, 60, 0.1);
        color: #e74c3c;
        border: 1px solid rgba(231, 76, 60, 0.3);
    }

    .priority-medium {
        background: rgba(52, 152, 219, 0.1);
        color: #3498db;
        border: 1px solid rgba(52, 152, 219, 0.3);
    }

    .priority-low {
        background: rgba(39, 174, 96, 0.1);
        color: #27ae60;
        border: 1px solid rgba(39, 174, 96, 0.3);
    }

    .progress-bar-custom {
        height: 8px;
        background: #ecf0f1;
        border-radius: 10px;
        overflow: hidden;
        margin-top: 10px;
    }

    .progress-fill {
        height: 100%;
        background: linear-gradient(45deg, #27ae60, #2ecc71);
        border-radius: 10px;
        transition: width 0.3s ease;
    }

    .profile-link:hover {
        background-color: rgba(52, 152, 219, 0.1);
        border-radius: 10px;
    }

    .profile-section {
        cursor: pointer;
    }

    /* Nouveau style pour le bouton chatbot */
    .chat-btn {
        background: linear-gradient(45deg, #667eea, #764ba2);
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 25px;
        font-weight: 600;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        transition: all 0.3s ease;
        margin-left: 10px;
        cursor: pointer;
    }

        .chat-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
            color: white;
            text-decoration: none;
        }

    .action-buttons {
        display: flex;
        gap: 10px;
        align-items: center;
    }

    .stats-number {
        font-size: 1.8rem;
        font-weight: 700;
        color: #2c3e50;
    }

    .stats-label {
        color: #7f8c8d;
        font-size: 0.9rem;
    }
</style>

<div class="dashboard-container">
    <!-- Header avec design modernisé -->
    <div class="dashboard-header">
        <div class="row align-items-center">
            <div class="col-md-6">
                <div class="welcome-section">
                    <div class="welcome-illustration">
                        👋
                    </div>
                    <div class="welcome-text">
                        <h2>Tableau de bord </h2>
                        <p>@DateTime.Now.ToString("dddd, dd MMMM yyyy")</p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="progress-info">
                    <h4>@Model.CompletedPercent% des tâches terminées</h4>
                    <p>Performance globale de l'équipe</p>
                </div>
            </div>

<div class="col-md-2">
    <div class="d-flex flex-column gap-2">
        <!-- Lien Profil -->
        <a href="@Url.Action("Profile", "Workspace")" class="profile-link" style="text-decoration: none; color: inherit; display: flex; align-items: center; gap: 15px; padding: 10px; border-radius: 10px; transition: background-color 0.3s ease;">
            <img src="@ViewBag.CurrentUser?.AvatarUrl" class="profile-img" alt="@ViewBag.CurrentUser?.Name">
            <div class="profile-name">@ViewBag.CurrentUser?.Name</div>
        </a>
        
        <!-- Bouton Assistant IA -->
        <button onclick="openChatWidget()" class="chat-btn align-self-start">
            <i class="fas fa-robot"></i>
            Assistant IA
        </button>
    </div>
</div>
        </div>
    </div>

    <!-- Contenu principal -->
    <div class="row g-4">
        <!-- Graphique d'activité des utilisateurs -->
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h5>Activité des utilisateurs</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        @foreach (var user in Model.UserActivities)
                        {
                            <div class="col-md-6 mb-3">
                                <div class="d-flex align-items-center p-2 border rounded">
                                    <img src="@user.Avatar" class="rounded-circle me-3" width="40" height="40" alt="@user.UserName">
                                    <div class="flex-grow-1">
                                        <h6 class="mb-0">@user.UserName</h6>
                                        <small class="text-muted">
                                            @user.CompletedTasks tâches terminées | @user.PendingTasks en cours
                                        </small>
                                    </div>
                                    <span class="badge @(user.IsActive ? "bg-success" : "bg-secondary")">
                                        @(user.IsActive ? "Actif" : "Inactif")
                                    </span>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Tâches par priorité (globales) -->
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h5>Tâches par priorité (Équipe)</h5>
                </div>
                <div class="card-body">
                    <div class="priority-badge priority-high">
                        <span>Élevée</span>
                        <span class="badge bg-danger">@Model.High</span>
                    </div>
                    <div class="priority-badge priority-medium">
                        <span>Moyenne</span>
                        <span class="badge bg-primary">@Model.Medium</span>
                    </div>
                    <div class="priority-badge priority-low">
                        <span>Faible</span>
                        <span class="badge bg-success">@Model.Low</span>
                    </div>
                    <div class="mt-3">
                        <small class="text-muted">Terminées: @Model.CompletedPercent%</small>
                        <div class="progress-bar-custom">
                            <div class="progress-fill" style="width: @Model.CompletedPercent%"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Deuxième rangée -->
    <div class="row g-4 mt-1">
        <!-- Progression hebdomadaire -->
        <div class="col-md-3">
            <div class="card">
                <div class="card-header">
                    <h5>Progression hebdomadaire</h5>
                </div>
                <div class="card-body">
                    <canvas id="weeklyChart" height="200"></canvas>
                </div>
            </div>
        </div>

        <!-- Statistiques rapides -->
        <div class="col-md-5">
            <div class="card">
                <div class="card-header">
                    <h5>Statistiques globales</h5>
                </div>
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-4">
                            <div class="stats-number">@Model.TotalTasks</div>
                            <div class="stats-label">Total tâches</div>
                        </div>
                        <div class="col-4">
                            <div class="stats-number">@Model.CompletedTasks</div>
                            <div class="stats-label">Terminées</div>
                        </div>
                        <div class="col-4">
                            <div class="stats-number">@Model.InProgressTasks</div>
                            <div class="stats-label">En cours</div>
                        </div>
                        <div class="col-4 mt-3">
                            <div class="stats-number">@Model.OverdueTasks</div>
                            <div class="stats-label">En retard</div>
                        </div>
                        <div class="col-4 mt-3">
                            <div class="stats-number">@Model.UserActivities.Count</div>
                            <div class="stats-label">Membres</div>
                        </div>
                        <div class="col-4 mt-3">
                            <div class="stats-number">@Model.UserActivities.Count(u => u.IsActive)</div>
                            <div class="stats-label">Actifs</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Actions rapides -->
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h5>Actions rapides</h5>
                </div>
                <div class="card-body">
                    <div class="d-flex flex-column gap-2">
                        <a href="@Url.Action("Create", "Tasks")" class="btn btn-primary">
                            <i class="fas fa-plus"></i> Nouvelle tâche
                        </a>
                        <a href="@Url.Action("Index", "Tasks")" class="btn btn-outline-primary">
                            <i class="fas fa-list"></i> Toutes les tâches
                        </a>
                        <a href="@Url.Action("Index", "ChatBot")" class="btn btn-outline-success">
                            <i class="fas fa-robot"></i> Assistant IA
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Inclure le widget ChatBot -->
@await Html.PartialAsync("~/Views/Shared/_ChatWidget.cshtml")

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Graphique de progression hebdomadaire
        const weeklyCtx = document.getElementById('weeklyChart');
        new Chart(weeklyCtx, {
            type: 'bar',
            data: {
                labels: ['Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam', 'Dim'],
                datasets: [{
                    label: 'Tâches complétées',
                    data: @Json.Serialize(Model.WeeklyCompletion),
                    backgroundColor: 'rgba(54, 162, 235, 0.7)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            color: 'rgba(0, 0, 0, 0.1)'
                        }
                    },
                    x: {
                        grid: {
                            display: false
                        }
                    }
                }
            }
        });

        // Fonction pour ouvrir le chat
        function openChatWidget() {
            if (!isWidgetOpen) {
                toggleChatWidget();
            }
            setTimeout(() => {
                const input = document.getElementById('widgetInput');
                if (input) {
                    input.focus();
                    input.placeholder = "Tapez votre question à l'assistant...";
                }
            }, 300);
        }
    </script>
}